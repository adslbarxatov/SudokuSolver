///////////////////////////////////////////////////////////////////////////
// Проверка на ошибочность предположения (повторения цифр)
//
// Возвращает 1, если ошибки были найдены (есть дублирующиеся цифры);
//            0, если ошибок нет
//

int CheckErrors (void)
	{
	unsigned int i, j, s;

	// Горизонтальные линии
	FOR_I
		{
		s = 0;

		FOR_J
			{
			// Чтобы определить, были ли повторы, создаётся переменная s, в
			// которую заносятся уже встреченные биты вычисленных ячеек.
			// Если ячейка обозначена как вычисленная (is_pow_2 == 1), но
			// операция дизъюнкции этой ячейки с s не изменяет s, значит,
			// эта цифра уже есть в строке, что означает наличие ошибки
			if ((IS_MIJ_POW2 == 1) && ((s | Mtx[i][j]) == s))
				{
				return 1;
				}

			s |= (IS_MIJ_POW2 * Mtx[i][j]);	// Добавляет бит в s, если он получен из вычисленной ячейки
			}
		}

	// Вертикальные линии
	FOR_J
		{
		s = 0;

		FOR_I
			{
			if ((IS_MIJ_POW2 == 1) && ((s | Mtx[i][j]) == s))
				{
				return 1;
				}

			s |= (IS_MIJ_POW2 * Mtx[i][j]);
			}
		}

	// Квадраты
	FOR_I
		{
		s = 0;

		FOR_J
			{
			if ((IS_MSIJ_POW2 == 1) && ((s | Mtx[SQI][SQJ]) == s))
				{
				return 1;
				}

			s |= (IS_MSIJ_POW2 * Mtx[SQI][SQJ]);
			}
		}

	// Ошибок нет
	return 0;
	}
