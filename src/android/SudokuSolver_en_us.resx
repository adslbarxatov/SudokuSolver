<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CellsAppearanceLabel" xml:space="preserve">
    <value>Cells appearance</value>
  </data>
  <data name="CheckSolutionButton" xml:space="preserve">
    <value>Check solution</value>
  </data>
  <data name="ColorSchemeLabel" xml:space="preserve">
    <value>Color scheme</value>
  </data>
  <data name="Difficulty0" xml:space="preserve">
    <value>Easy</value>
  </data>
  <data name="Difficulty1" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="Difficulty2" xml:space="preserve">
    <value>Hard</value>
  </data>
  <data name="DifficultyLevel" xml:space="preserve">
    <value>Difficulty level:</value>
  </data>
  <data name="EmptyButton" xml:space="preserve">
    <value>(empty)</value>
  </data>
  <data name="GenerateMatrix" xml:space="preserve">
    <value>Start new game</value>
  </data>
  <data name="InputLabel" xml:space="preserve">
    <value>Table values:</value>
  </data>
  <data name="KeyboardButton" xml:space="preserve">
    <value>Keyboard</value>
  </data>
  <data name="LoadFromFile" xml:space="preserve">
    <value>Load from file</value>
  </data>
  <data name="Menu0" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="Menu1" xml:space="preserve">
    <value>Game</value>
  </data>
  <data name="Menu2" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="MenuButton" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="MessageNotEnough" xml:space="preserve">
    <value>There is not enough numbers in the specified file to build the sudoku table</value>
  </data>
  <data name="ResetField" xml:space="preserve">
    <value>Reset the table</value>
  </data>
  <data name="ClearSolution" xml:space="preserve">
    <value>Cancel the solution</value>
  </data>
  <data name="ResetWarning" xml:space="preserve">
    <value>Clear all values in all cells?</value>
  </data>
  <data name="SaveToFile" xml:space="preserve">
    <value>Save to file</value>
  </data>
  <data name="ShareButton" xml:space="preserve">
    <value>Share results</value>
  </data>
  <data name="SolutionIsCorrect" xml:space="preserve">
    <value>Solution is correct, keep going!</value>
  </data>
  <data name="SolutionIsCorrectNoScore" xml:space="preserve">
    <value>Solution is correct, but your points were lost because you’ve changed the generated table.

Create a new table to continue the game</value>
  </data>
  <data name="SolutionIsIncorrect" xml:space="preserve">
    <value>This solution contains mistakes</value>
  </data>
  <data name="SolutionPage" xml:space="preserve">
    <value>Sudoku solution</value>
  </data>
  <data name="SolutionTip" xml:space="preserve">
    <value>Solution in progress...</value>
  </data>
  <data name="SolveButton" xml:space="preserve">
    <value>Solve</value>
  </data>
  <data name="SolvedText" xml:space="preserve">
    <value>Solved!</value>
  </data>
  <data name="StatsButton" xml:space="preserve">
    <value>Game statistics</value>
  </data>
  <data name="StatsText" xml:space="preserve">
    <value>Game mode results:

Points (total):
{0:S}

Wins:
{1:S}

Best solution time:
{2:S}

Longest unchecked chain:
{3:S}</value>
  </data>
  <data name="WelcomeTip" xml:space="preserve">
    <value>Welcome to Sudoku solver – a sudoku solving tool!

In this app you can solve classic (9 x 9) sudokus both manually and automatically. The first option (game mode) also allows you to accumulate winnings and share results. The second is a simple calculator that displays the solution for the specified table.

• To switch to the game mode, use section Menu &gt; Interface mode &gt; Game mode. All the necessary buttons will then appear on the screen.

• You can find the controls and detailed information in the Menu &gt; About the app section</value>
  </data>
  <data name="GameModeLabel" xml:space="preserve">
    <value>Adjust the interface for game mode</value>
  </data>
  <data name="GameModeTip" xml:space="preserve">
    <value>When game mode is active, the app keeps track of winnings and places special buttons to the main screen. In addition, changing the cells filled by the app at the beginning of a new game is blocked. In regular mode app works only as a solutions calculator</value>
  </data>
  <data name="KeepScreenOnLabel" xml:space="preserve">
    <value>Disable sleep mode</value>
  </data>
  <data name="KeepScreenOnTip" xml:space="preserve">
    <value>The app will not allow the device to go into sleep mode when it is active</value>
  </data>
  <data name="SettingsPage" xml:space="preserve">
    <value>App settings</value>
  </data>
  <data name="ReplaceBalloonsLabel" xml:space="preserve">
    <value>Replace “balloons” with messages</value>
  </data>
  <data name="ReplaceBalloonsTip" xml:space="preserve">
    <value>On some devices, multiline “balloons” (rectangular short text messages) are not supported properly. Enable this option to replace them with regular messages about solution and checking results if needed</value>
  </data>
  <data name="LanguageTip" xml:space="preserve">
    <value>This option sets the language of the interface and text messages</value>
  </data>
  <data name="FontSizeTip" xml:space="preserve">
    <value>This option sets the size of elements and the font size for text tips</value>
  </data>
  <data name="ColorSchemeTip" xml:space="preserve">
    <value>This option allows you to select the color scheme for sudoku field</value>
  </data>
  <data name="CellsAppearanceTip" xml:space="preserve">
    <value>This option allows you to select the appearance for values in sudoku field</value>
  </data>
  <data name="HighlightAffectedLabel" xml:space="preserve">
    <value>Highlighting of affected cells</value>
  </data>
  <data name="HighlightAffectedTip" xml:space="preserve">
    <value>This option allows you to highlight cells affected by the selected one (in row, column and square)</value>
  </data>
  <data name="Achi0" xml:space="preserve">
    <value>3️⃣
“Guess in three tries” achievement

Appears every time when:
- two or less checks done (including the last one) on easy game
- three or less checks done on medium game
- four or less checks done on hard game</value>
  </data>
  <data name="Achi1" xml:space="preserve">
    <value>👍
“No mistakes” achievement

Appears every time when all checks are successful</value>
  </data>
  <data name="StatsTextAchi" xml:space="preserve">
    <value>Achievements:
3️⃣ {0:S}		👍 {1:S}</value>
  </data>
  <data name="HelpQRTip" xml:space="preserve">
    <value>To access help, support and reference materials, use the QR code below.

A short description of the app is available further down this page</value>
  </data>
  <data name="Highlight0" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Highlight1" xml:space="preserve">
    <value>Lines only</value>
  </data>
  <data name="Highlight2" xml:space="preserve">
    <value>Lines and squares</value>
  </data>
  <data name="AppModeMessage" xml:space="preserve">
    <value>Game mode is active: {1:S}

Current difficulty: {0:S}

The app is tracking wins: {1:S}

Changing generated cells is not possible: {1:S}</value>
  </data>
  <data name="Menu3" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="StateButton" xml:space="preserve">
    <value>App status</value>
  </data>
</root>